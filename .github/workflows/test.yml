name: Test

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

jobs:
    test:
        runs-on: ${{ matrix.os }}
        defaults:
            run:
                shell: bash -e {0} # -e to fail on error

        strategy:
            fail-fast: false
            matrix:
                include:
                    - os: ubuntu-latest
                      python: "3.10"
                      run_mode: "slow"
                    - os: ubuntu-latest
                      python: "3.11"
                      run_mode: "slow"
                    - os: ubuntu-latest
                      python: "3.11"
                      run_mode: "fast"
                    - os: ubuntu-latest
                      python: "3.11"
                      run_mode: slow
                      pip-flags: "--pre"

        env:
            OS: ${{ matrix.os }}
            PYTHON: ${{ matrix.python }}

        steps:
            - uses: actions/checkout@v4
            - name: Set up Python ${{ matrix.python }}
              uses: actions/setup-python@v5
              with:
                  python-version: ${{ matrix.python }}
                  cache: "pip"
                  cache-dependency-path: "**/pyproject.toml"

            - name: Install test dependencies
              run: python -m pip install --upgrade uv wheel
            - name: Install dependencies
              run: uv pip install --system ${{ matrix.pip-flags }} ".[dev,test,coda]"

            - name: Test
              env:
                  MPLBACKEND: agg
                  PLATFORM: ${{ matrix.os }}
                  DISPLAY: :42
              run: |
                  pytest_args="-m pytest -v --color=yes"
                  if [ "${{ matrix.run_mode }}" = "slow" ]; then
                    pytest_args="$pytest_args --runslow"
                  fi
                  coverage run $pytest_args

            - name: Show coverage report
              run: coverage report -m

            - name: Upload coverage
              uses: codecov/codecov-action@v4
              with:
                  token: ${{ secrets.CODECOV_TOKEN }}
                  fail_ci_if_error: true
                  verbose: true
